import numpy as np
import matplotlib.pyplot as plt
from matplotlib import colors
import matplotlib
from DividerAlgorithm import *
from ColouringAlgorithm import *
import time

# Initialise board
# board = np.array(np.zeros((7, 16)))
#
# colours = [1, 2, 3, 4, 5]
#
# for colour in colours:
#     y, x = pick_random_empty_index(board)
#     board[y, x] = colour
#     create_shape_of_size_n(colour, 6, board, y, x)

game = DividerAlgorithm()

start_time = time.time()
divided_board = game.run()

test_colouring_algorithm = ColouringAlgorithm(np.array(divided_board))

print(test_colouring_algorithm.get_shape_properties(1))

print(f'Board generated in {round((time.time() - start_time), 2)}')


# [[ 1.  2.  3.  3.  4.  4.  5.  5.  6.  7.  8.  9. 10. 10. 11.]
#  [ 1.  2.  3.  3. 12.  4. 13.  6.  6.  9.  9.  9. 10. 14. 14.]
#  [15. 16. 17.  3. 18. 18. 13. 13. 19.  9.  9. 20. 10. 14. 21.]
#  [22. 16. 17. 23. 24. 18. 18. 13. 19. 19. 25. 20. 10. 14. 21.]
#  [22. 22. 26. 23. 24. 27. 18. 13. 28. 19. 25. 20. 29. 14. 21.]
#  [22. 26. 26. 23. 24. 27. 27. 27. 28. 19. 25. 20. 29. 14. 21.]
#  [30. 30. 30. 30. 30. 30. 27. 27. 28. 28. 25. 29. 29. 29. 29.]]

# [[ 1.  2.  2.  2.  3.  3.  4.  5.  5.  5.  6.  7.  8.  8.  9.]
#  [ 1. 10. 10.  2.  3. 11.  4.  4. 12.  5.  6.  6.  8.  8.  8.]
#  [ 1.  1. 13. 13.  3. 14. 15. 12. 12.  6.  6. 16. 17. 17.  8.]
#  [18.  1. 19. 14. 14. 14. 15. 20. 21.  6. 22. 16. 17. 17. 23.]
#  [18.  1. 24. 24. 24. 25. 25. 20. 26. 22. 22. 27. 17. 17. 23.]
#  [28. 28. 24. 29. 29. 29. 25. 20. 26. 26. 26. 27. 30. 30. 23.]
#  [28. 28. 28. 29. 29. 25. 25. 25. 26. 27. 27. 27. 30. 30. 30.]]

# [[ 5.  5.  5.  5.  5. 14. 18. 18. 18. 18. 27. 27. 27. 27. 27.]
#  [ 5.  3.  8.  8.  8. 13. 17. 17. 21. 24. 24. 29. 29. 29. 30.]
#  [ 4.  3.  7.  9.  9. 13. 13. 17. 21. 23. 24. 29. 29. 29. 30.]
#  [ 3.  3.  6.  6. 12. 13. 16. 17. 21. 23. 23. 23. 26. 30. 30.]
#  [ 3.  2.  6.  6. 11. 11. 16. 20. 19. 23. 26. 26. 26. 26. 30.]
#  [ 2.  2.  2.  6. 11. 11. 16. 20. 19. 22. 25. 25. 26. 28. 30.]
#  [ 1.  1.  2.  6. 10. 10. 15. 19. 19. 22. 22. 28. 28. 28. 28.]]

# [[ 5.  5.  5.  5. 15. 15. 21. 21. 21. 21. 21. 28. 28. 28. 29.]
#  [ 5.  4.  8. 12. 11. 18. 18. 22. 22. 22. 21. 28. 28. 29. 29.]
#  [ 4.  4.  8. 11. 11. 18. 18. 17. 24. 22. 22. 22. 29. 29. 30.]
#  [ 3.  6.  6.  6. 11. 17. 17. 17. 24. 24. 26. 26. 26. 29. 30.]
#  [ 3.  2.  7. 10. 14. 17. 20. 20. 23. 23. 23. 27. 27. 27. 30.]
#  [ 2.  2.  2. 10. 14. 14. 14. 14. 23. 19. 25. 25. 27. 30. 30.]
#  [ 1.  1.  1.  9. 13. 16. 19. 19. 19. 19. 25. 25. 27. 27. 30.]]

# [[ 1.  1.  1.  1. 14. 14. 14. 22. 22. 22. 27. 27. 27. 27. 30.]
#  [ 2.  6.  7.  7. 15. 17. 17. 17. 22. 24. 24. 24. 24. 24. 30.]
#  [ 3.  7.  7. 11. 11. 11. 19. 19. 19. 25. 25. 28. 28. 28. 30.]
#  [ 3.  3.  7. 12. 12. 18. 18. 18. 18. 18. 25. 28. 28. 29. 30.]
#  [ 3.  8.  7. 13. 16. 10. 20. 23. 23. 23. 25. 25. 25. 29. 30.]
#  [ 4.  8.  9.  9. 16. 10. 20. 20. 21. 23. 23. 23. 29. 29. 29.]
#  [ 5.  5. 10. 10. 10. 10. 21. 21. 21. 26. 26. 26. 26. 26. 26.]]

# [[ 1.  5.  9.  9. 13. 13. 13. 13. 20. 20. 20. 20. 28. 28. 28.]
#  [ 2.  2.  2.  9.  9.  9. 18. 13. 21. 23. 20. 26. 28. 28. 28.]
#  [ 3.  6.  2.  9. 14. 14. 18. 15. 21. 23. 25. 26. 26. 26. 26.]
#  [ 3.  2.  2. 11. 11. 15. 15. 15. 21. 23. 25. 27. 27. 27. 27.]
#  [ 3.  3.  7. 12. 11. 11. 15. 19. 22. 23. 25. 25. 29. 27. 27.]
#  [ 4.  7.  7. 12. 11. 16. 16. 19. 22. 22. 25. 24. 29. 29. 30.]
#  [ 4.  8. 10. 12. 11. 17. 17. 19. 22. 24. 24. 24. 30. 30. 30.]]


# cmap = colors.ListedColormap(['white', 'red', 'blue', 'green', 'orange', 'yellow'])
# bounds = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# norm = colors.BoundaryNorm(bounds, cmap.N)
#
# fig, ax = plt.subplots()
# ax.imshow(board, cmap=cmap, norm=norm)
#
# # draw gridlines
# ax.grid(which='major', axis='both', linestyle='-', color='k', linewidth=2)
# ax.set_xticks(np.arange(-0.5, 15, 1));
# ax.set_yticks(np.arange(-0.5, 6, 1));
#
# plt.show()
